version: '3.8'

services:
  # Database services
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root_password_here
      MYSQL_DATABASE: database_name_here
      MYSQL_USER: user_name_here
      MYSQL_PASSWORD: user_password_here
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - my_network

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    environment:
      INFLUXDB_DB: influxdb_database
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin_password_here
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - my_network

  # Nginx as a reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mounting to conf.d as default.conf
    depends_on:
      - mariadb
      - influxdb
    networks:
      - my_network

  # Application services
  animalsdataservice:
    build:
      context: ./animalsdataservice
      dockerfile: Dockerfile
    container_name: animalsdataservice
    ports:
      - "8081:8080"
    environment:
      DB_HOST: mariadb
      INFLUX_HOST: influxdb
    networks:
      - my_network
    depends_on:
      - mariadb
      - influxdb

  animalservice:
    build:
      context: ./animalservice
      dockerfile: Dockerfile
    container_name: animalservice
    ports:
      - "8082:8080"
    environment:
      DB_HOST: mariadb
      INFLUX_HOST: influxdb
    networks:
      - my_network
    depends_on:
      - mariadb
      - influxdb

  notificationservice:
    build:
      context: ./notificationservice
      dockerfile: Dockerfile
    container_name: notificationservice
    ports:
      - "8083:8080"
    environment:
      DB_HOST: mariadb
      INFLUX_HOST: influxdb
    networks:
      - my_network
    depends_on:
      - mariadb
      - influxdb

  reportservice:
    build:
      context: ./reportservice
      dockerfile: Dockerfile
    container_name: reportservice
    ports:
      - "8084:8080"
    environment:
      DB_HOST: mariadb
      INFLUX_HOST: influxdb
    networks:
      - my_network
    depends_on:
      - mariadb
      - influxdb

  userservice:
    build:
      context: ./userservice
      dockerfile: Dockerfile
    container_name: userservice
    ports:
      - "8085:8080"
    environment:
      DB_HOST: mariadb
      INFLUX_HOST: influxdb
    networks:
      - my_network
    depends_on:
      - mariadb
      - influxdb

volumes:
  mariadb_data:
  influxdb_data:

networks:
  my_network:
    driver: bridge
