version: '3.8'

services:
  # Database services
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mariadb_data:/var/lib/mysql
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  
  influxdb:
    image: influxdb:2
    container_name: influxdb
    env_file:
      - .env
    ports:
      - "8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8086/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    volumes:
      - kafka_data:/var/lib/kafka
    depends_on:
      - zookeeper
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "echo 'ruok' | nc -w 5 localhost 19092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Cloud Gateway as a reverse proxy
  gateway:
    build:
      context: ./
      dockerfile: ./gateway/Dockerfile
    container_name: gateway
    ports:
      - "80:80"
    depends_on:
      userservice:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: always

  # Application services
  animalservice:
    build:
      context: ./
      dockerfile: ./animalservice/Dockerfile
    container_name: animalservice
    ports:
      - "8082:8080"
    env_file:
      - .env
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: 8086
      INFLUXDB_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      INFLUXDB_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUXDB_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
    depends_on:
      mariadb:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    volumes:
      - animal-images:/uploads/animals
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8082/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  notificationservice:
    build:
      context: ./
      dockerfile: ./notificationservice/Dockerfile
    container_name: notificationservice
    ports:
      - "8083:8080"
    env_file:
      - .env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - INFLUX_HOST=influxdb
    depends_on:
      mariadb:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  reportservice:
    build:
      context: ./
      dockerfile: ./reportservice/Dockerfile
    container_name: reportservice
    ports:
      - "8084:8080"
    env_file:
        - .env
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: 8086
      INFLUXDB_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      INFLUXDB_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUXDB_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
    depends_on:
      mariadb:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  userservice:
    build:
      context: ./
      dockerfile: ./userservice/Dockerfile
    container_name: userservice
    ports:
      - "8085:8080"
    env_file:
      - .env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
      - JWT_PRIVATE_KEY=/app/keys/private.key
      - JWT_PUBLIC_KEY=/app/keys/public.key
    volumes:
      - ./security:/app/keys
    depends_on:
      mariadb:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8080/api/v1/users/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  pwa:
    build:
      context: ./
      dockerfile: ./pwa/Dockerfile
    container_name: pwa
    depends_on:
      animalservice:
        condition: service_healthy
      notificationservice:
        condition: service_healthy
      reportservice:
        condition: service_healthy
      userservice:
        condition: service_healthy
      gateway:
        condition: service_healthy
    environment:
      NODE_ENV: production
      VITE_API_BASE_URL: ${BASE_URL}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped


  datacollector:
    build:
      context: ./
      dockerfile: ./datacollector/Dockerfile
    container_name: datacollector
    env_file:
      - .env
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      INFLUXDB_HOST: influxdb
      INFLUXDB_PORT: 8086
      INFLUXDB_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      INFLUXDB_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      INFLUXDB_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
    depends_on:
      mariadb:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      kafka:
       condition: service_healthy

  actionservice:
    build:
      context: ./
      dockerfile: ./actionservice/Dockerfile
    container_name: actionservice
    env_file:
      - .env
    environment:
      - DB_HOST=mariadb
      - DB_PORT=3306
    depends_on:
      mariadb:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      kafka:
        condition: service_healthy

volumes:
  mariadb_data:
  influxdb_data:
  zookeeper_data:
  kafka_data:
  animal-images:
  security:
